// <auto-generated />
using System;
using System.Collections.Generic;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(SuperPreciosContext))]
    partial class SuperPreciosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Supermercado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermercados");
                });

            modelBuilder.Entity("Prueba.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Prueba.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Prueba.Entidades.PrecioHistorico", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoId1")
                        .HasColumnType("int");

                    b.Property<int>("SupermercadoId")
                        .HasColumnType("int");

                    b.Property<int?>("SupermercadoId1")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "Fecha");

                    b.HasIndex("ProductoId1");

                    b.HasIndex("SupermercadoId");

                    b.HasIndex("SupermercadoId1");

                    b.ToTable("PreciosHistoricos");
                });

            modelBuilder.Entity("Prueba.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupermercadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("SupermercadoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SistemaAutenticacion.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Password", "SistemaAutenticacion.Entidades.Usuario.Password#Password", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Encriptada")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SistemaAutenticacion.Entidades.Administrador", b =>
                {
                    b.HasBaseType("SistemaAutenticacion.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("SistemaAutenticacion.Entidades.Miembro", b =>
                {
                    b.HasBaseType("SistemaAutenticacion.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Miembro");
                });

            modelBuilder.Entity("Prueba.Entidades.PrecioHistorico", b =>
                {
                    b.HasOne("Prueba.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prueba.Entidades.Producto", null)
                        .WithMany("PreciosHistoricos")
                        .HasForeignKey("ProductoId1");

                    b.HasOne("LogicaNegocio.Entidades.Supermercado", "Supermercado")
                        .WithMany()
                        .HasForeignKey("SupermercadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Supermercado", null)
                        .WithMany("PreciosHistoricos")
                        .HasForeignKey("SupermercadoId1");

                    b.Navigation("Producto");

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("Prueba.Entidades.Producto", b =>
                {
                    b.HasOne("Prueba.Entidades.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prueba.Entidades.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Supermercado", "Supermercado")
                        .WithMany()
                        .HasForeignKey("SupermercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Supermercado", b =>
                {
                    b.Navigation("PreciosHistoricos");
                });

            modelBuilder.Entity("Prueba.Entidades.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Prueba.Entidades.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Prueba.Entidades.Producto", b =>
                {
                    b.Navigation("PreciosHistoricos");
                });
#pragma warning restore 612, 618
        }
    }
}
